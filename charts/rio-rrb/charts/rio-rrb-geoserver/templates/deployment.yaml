apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rio-rrb-geoserver.fullname" . }}
  labels:
    {{- include "rio-rrb-geoserver.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rio-rrb-geoserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }} # roll deployments on every upgrade: https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rio-rrb-geoserver.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: geoserver-data
        azureFile: 
          secretName: rio-rrb-geoserver-volume-secret
          shareName: geoserver
          readOnly: false
      - name: config
        projected:
          sources:
          - configMap:
              name: {{ include "rio-rrb-geoserver.fullname" . }}-environment-properties-{{ .Values.global.env.name }}-configmap
      - name: secrets
        secret:
          secretName: rio-rrb-geoserver-secrets
          items:
          - key: geoserverSqlServerPassword
            path: geoserverSqlServerPassword
          - key: geoserverAdminPassword
            path: geoserverAdminPassword
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rio-rrb-geoserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/bin/bash" ]
          args: ["/opt/geoserver/data_dir/sitka-geoserver-config/scripts/sitka-entry-point.sh"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
          - name: config
            mountPath: /app/config
            readOnly: true
          - name: geoserver-data
            mountPath: /opt/geoserver
            readOnly: false
            
          envFrom:
          - configMapRef:
              name: {{ include "rio-rrb-geoserver.fullname" . }}-{{ .Values.global.env.name }}-configmap
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
