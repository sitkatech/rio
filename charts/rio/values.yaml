global:
  env:
    name: "qa"
    dbServer: "databaseserver"
    databaseName: "databasename"
    sqlUsername: "sqlUsername"
    sqlGeoserverUsername: "geoserverUsername"
    appInsightsInstrumentationKey: "00000000-0000-0000-0000-000000000000"
    tenantName: "edf"
    geoserverInitialMemory: "1G"
    geoserverMaximumMemory: "2G"
    keystoneClientID: "Rio-EDF"
  domains:
    api: "apiUrl"
    web: "webUrl"
    geoserver: "geoserverUrl"
  secrets:
    geoserverSqlServerPassword: "passwordhere"
    geoserverAdminPassword: "geomaster"
    applicationStorageAccountName: "storageAccountName"
    applicationStorageAccountKey:  "longkeyreplacedhere"
    apiSqlPassword: "passwordhere"
    sendGridApiKey: "sendgridapikeyhere"
    openETApiKey: "openETApiKeyHere"
    hangfirePassword: "passwordhere"

api:
  replicaCount: 1
  image:
    repository: esacontainers.azurecr.io/rio/api
    pullPolicy: Always
  nameOverride: ""
  fullnameOverride: ""
  namespace: h2o
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: azure/application-gateway
      cert-manager.io/cluster-issuer: letsencrypt
      acme.cert-manager.io/http01-edit-in-place: "true"
      appgw.ingress.kubernetes.io/ssl-redirect: "true"
      appgw.ingress.kubernetes.io/request-timeout: "300"
      cert-manager.io/issue-temporary-certificate: "true"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: 
    agentpool: appnodepool
  tolerations: []
  affinity: {}

web:
  replicaCount: 1
  image:
    repository: esacontainers.azurecr.io/rio/web
    pullPolicy: Always
  nameOverride: ""
  fullnameOverride: ""
  namespace: h2o
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: azure/application-gateway
      cert-manager.io/cluster-issuer: letsencrypt
      acme.cert-manager.io/http01-edit-in-place: "true"
      appgw.ingress.kubernetes.io/ssl-redirect: "true"
      appgw.ingress.kubernetes.io/request-timeout: "300"
      cert-manager.io/issue-temporary-certificate: "true"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: 
    agentpool: appnodepool
  tolerations: []
  affinity: {}

geoserver:
  replicaCount: 1
  image:
    repository: kartoza/geoserver
    pullPolicy: Always
    tag: "2.16.2"
    # Overrides the image tag whose default is the chart appVersion.
  nameOverride: ""
  fullnameOverride: ""
  namespace: h2o
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: azure/application-gateway
      cert-manager.io/cluster-issuer: letsencrypt
      acme.cert-manager.io/http01-edit-in-place: "true"
      appgw.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/issue-temporary-certificate: "true"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: 
    agentpool: appnodepool
  tolerations: []
  affinity: {}
